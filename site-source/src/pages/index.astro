---
import Layout from '../layouts/Layout.astro';
import Navigation from '../components/Navigation.astro';
import Hero from '../components/Hero.astro';
import Features from '../components/Features.astro';
import Banner from '../components/Banner.astro';
import About from '../components/About.astro';
import Contact from '../components/Contact.astro';
import Downloads from '../components/Downloads.astro';
import '../styles/global.css';
---

<Layout title="SimC - Revolutionary Circuit Simulation Software">
  <Navigation />
  <main>
    <Hero />
    <Downloads />
    <Features />
    <Banner />
    <About />
    <Contact />
  </main>
  
  <!-- GSAP Animation Scripts -->
  <script type="module" src="/src/scripts/animations.ts"></script>
  
  <!-- Additional Interactive Features -->
  <script>
    // Smooth scrolling enhancement
    document.addEventListener('DOMContentLoaded', () => {
      // Initialize Feather Icons
      if (typeof feather !== 'undefined') {
        feather.replace();
      }
      
      // Add loading states
      document.body.classList.add('loaded');
      
      // Intersection Observer for animations
      const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
      };
      
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add('animate-in');
          }
        });
      }, observerOptions);
      
      // Observe all sections
      document.querySelectorAll('section').forEach(section => {
        observer.observe(section);
      });
      
      // Performance optimizations
      const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)');
      if (prefersReducedMotion.matches) {
        document.body.classList.add('reduce-motion');
      }
      
      // Lazy loading for images
      const images = document.querySelectorAll('img[data-src]');
      const imageObserver = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            const img = entry.target as HTMLImageElement;
            img.src = img.dataset.src || '';
            img.classList.remove('lazy');
            imageObserver.unobserve(img);
          }
        });
      });
      
      images.forEach(img => imageObserver.observe(img));
    });
    
    // Error handling
    window.addEventListener('error', (e) => {
      console.error('Application error:', e.error);
    });
    
    // Service Worker registration (if available)
    if ('serviceWorker' in navigator) {
      window.addEventListener('load', () => {
        navigator.serviceWorker.register('/sw.js')
          .then(registration => {
            console.log('SW registered: ', registration);
          })
          .catch(registrationError => {
            console.log('SW registration failed: ', registrationError);
          });
      });
    }
  </script>
  
  <!-- Schema.org structured data -->
  <script type="application/ld+json">
  {
    "@context": "https://schema.org",
    "@type": "SoftwareApplication",
    "name": "SimC",
    "description": "Circuit simulation software for engineers and designers",
    "applicationCategory": "Engineering Software",
    "operatingSystem": "Web-based",
    "offers": {
      "@type": "Offer",
      "price": "0",
      "priceCurrency": "INR",
      "description": "Free tier available"
    },
    "creator": {
      "@type": "Organization",
      "name": "SiC: Circuit Simulation",
      "url": "https://simc.bitmutex.com"
    }
  }
  </script>
</Layout>

<style>
  /* Loading animation */
  body:not(.loaded) {
    overflow: hidden;
  }
  
  body:not(.loaded)::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: hsl(var(--dark-bg));
    z-index: 9999;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  /* Animation classes */
  .animate-in {
    opacity: 1;
    transform: translateY(0);
  }
  
  section {
    opacity: 0;
    transform: translateY(30px);
    transition: opacity 0.8s ease, transform 0.8s ease;
  }
  
  /* Reduced motion support */
  .reduce-motion * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
  
  /* Lazy loading */
  img.lazy {
    filter: blur(5px);
    transition: filter 0.3s;
  }
  
  img:not(.lazy) {
    filter: blur(0);
  }
</style>
