name: Build and Deploy

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
      - '*-rc'
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  ASTRO_SOURCE: site-source
  BUILD_OUTPUT: site
  GRADLE_SOURCE: "."
  ELECTRON_SOURCE: app

jobs:
  # Shared build for Astro + Gradle (Linux only)
  build-shared:
    runs-on: ubuntu-latest
    outputs:
      build-output: ${{ steps.upload.outputs.path }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Set up Node.js LTS
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
          cache-dependency-path: |
            ${{ env.ASTRO_SOURCE }}/package-lock.json
            ${{ env.ELECTRON_SOURCE }}/package-lock.json

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: ASTRO: Build site
        run: |
          npm ci
          npx --no-install astro build --site "${{ steps.pages.outputs.origin }}" --base "${{ steps.pages.outputs.base_path }}"
        working-directory: ${{ env.ASTRO_SOURCE }}

      - name: GRADLE: Build app
        run: |
          chmod +x gradlew
          gradle build --dry-run
          gradle compileGwt --console verbose --info
          gradle makeSite --console verbose --info
        working-directory: ${{ env.GRADLE_SOURCE }}

      - name: Upload site output for Electron and Pages
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: site-artifact
          path: ${{ env.BUILD_OUTPUT }}

  # Electron build on all OS
  build-electron:
    needs: build-shared
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js LTS
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
          cache-dependency-path: ${{ env.ELECTRON_SOURCE }}/package-lock.json

      - name: Download shared build output (Astro + Gradle)
        uses: actions/download-artifact@v4
        with:
          name: site-artifact
          path: ${{ env.BUILD_OUTPUT }}

      - name: ELECTRON: Build & publish
        run: |
          npm ci
          export GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          npm run publish
        working-directory: ${{ env.ELECTRON_SOURCE }}

  # GitHub Pages deploy (Linux only)
  deploy-pages:
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    needs: build-shared
    runs-on: ubuntu-latest
    steps:
      - name: Download build output
        uses: actions/download-artifact@v4
        with:
          name: site-artifact
          path: ${{ env.BUILD_OUTPUT }}

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.BUILD_OUTPUT }}

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
